name: test

env:
  DEBIAN_FRONTEND: noninteractive
  GET_CTR_LOG: debug
  REG_USER: "robot$debian+bot_actions_2024"
  # ZSTD_LV: 18
  REG_URI: reg.tmoe.me:2096
  GET_CTR_CMD: docker run -i --rm -v /usr/local/bin:/host --pull always reg.tmoe.me:2096/rs/get-ctr:x64 cp get-ctr /host
  INSTALL_DEPS: |
    sudo apt-get update
    if [[ ! -e app.deb ]]; then
      docker run -t --rm -v $PWD:/app reg.tmoe.me:2096/debs/debootstrap:1.0.134 mv /app.deb /app
    fi
    for i in ./app.deb qemu-user-static systemd-container; do
      sudo apt-get install -y $i
    done

on:
  push:
    # branches:
    #   - master
    paths:
      - ".github/workflows/test-loong64.yml"

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          #         # - os: debian
          #         #   ver: "13"
          #         - arch: "i386"
          #         - arch: "amd64"
          #         - arch: "arm64"
          #         - arch: "ppc64el"
          #         - arch: "mips64el"
          #         - arch: "s390x"
          #         - arch: "armhf"
          #         - arch: "riscv64"
          #         - arch: "armel"
          #         - arch: "alpha"
          #         - arch: "hppa"
          - arch: "loong64"
    #         - arch: "m68k"
    #         - arch: "powerpc"
    #         - arch: "ppc64"
    #         - arch: "sh4"
    #         - arch: "sparc64"

    runs-on: ubuntu-latest
    env:
      build_cmd: get-ctr --os debian --ver unstable --arch ${{matrix.arch}}

    steps:
      - name: preparations
        run: |
          sudo rm  /etc/apt/sources.list
          cat > uuu.sources<<-'EOF'
          Enabled: yes
          Types: deb
          URIs: http://azure.archive.ubuntu.com/ubuntu/
          Suites: devel devel-updates devel-backports devel-security devel-proposed
          Components: main restricted universe multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          Trusted: yes
          EOF
          sudo mv uuu.sources /etc/apt/sources.list.d/
          ${{env.INSTALL_DEPS}}
          ${{env.GET_CTR_CMD}}

      - name: Login to REG
        uses: docker/login-action@v3
        with:
          registry: ${{env.REG_URI}}
          username: ${{env.REG_USER}}
          password: ${{ secrets.REG_TOKEN }}

      - name: download & repack rootfs & save cache
        #  --repack --zstd-level ${{env.ZSTD_LV}} --save-cache
        run: ${{env.build_cmd}} --obtain --repack --zstd-level 3
