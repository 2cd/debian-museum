name: DEV virtual machine
# auto-task.start-build-time = ?
env:
  # DEBIAN_FRONTEND: noninteractive
  # DEB_ENV: "DEBIAN_FRONTEND=noninteractive"
  DEV_DIR: assets/vm-dev
  VM_MIN_DIR: assets/vm-minimal
  VM_SHUTDOWN: "ssh -F ssh/vm.sshconf vm poweroff ||:"
  ARCH: x64
  DEB_ARCH: amd64
  QEMU_PKG: x86

on:
  # schedule:
  #   - cron: '0 11 28 */2 *'
  push:
    paths:
      - .github/workflows/vm-dev.yml

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: zsh --pipefail -fex {0}
    steps:
      - name: install zsh
        shell: sh -e {0}
        run: ${{ vars.INSTALL_ZSH }}

      - uses: actions/checkout@v4

      - name: download qemu image
        env:
          url: "https://github.com/2cd/debian-museum/releases/download/unstable/vm-minimal_${{env.ARCH}}.tar.zst"
        run: |
          sudo cp -pv ${VM_MIN_DIR}/scripts/* /usr/local/bin
          apt-install aria2
          apt-install qemu-system-${{env.QEMU_PKG}} &
          task=$!
          aria2c -s5 -x5 -k1m --no-conf -o min.tzst "$url"
          tar -xf min.tzst
          mv -vf Readme.md Readme.minimal-vm.md ||:
          cp -vf ${{env.DEV_DIR}}/* . ||:
          unlink min.tzst
          sed -E 's@(Port).*[0-9]$@\1 9023@' -i ssh/vm.sshconf
          sed -E '/^integer / s@(ssh_port)=.*@\1=9023@' -i run
          cat ssh/vm.sshconf
          wait $task
      - name: run vm
        run: |
          qemu-img resize disk.img +2G
          sudo chmod 666 -v /dev/kvm
          tmux new-session -d -s run-vm ./run
          sleep 2
          while {! ssh -F ssh/vm.sshconf vm exit} {
            sleep 1
          }

      - name: install grub & kernel
        uses: 2moe/local-ssh-action@v0
        with:
          host: vm
          args: |
            -F
            ssh/vm.sshconf
          run: |
            apt-install grub2 linux-image-cloud-${{env.DEB_ARCH}}
            grub-install /dev/vda

            >> /etc/default/grub <<'APPEND_GRUB_CFG'
            GRUB_TIMEOUT=1
            GRUB_TERMINAL="console serial"
            GRUB_CMDLINE_LINUX_DEFAULT=""
            GRUB_CMDLINE_LINUX="console=tty0 console=ttyS0,4000000"
            APPEND_GRUB_CFG

            update-grub
            print -R "LABEL=rootfs / ext4 defaults,rw,noatime 0 1" >> /etc/fstab

      - name: change the config
        run: |
          ${{env.VM_SHUTDOWN}}
          while {lsof disk.img} {
            sleep 1
          }
          sed_args=(
            -E
            -e '/debian-vm-minimal/ s@(name)=.*@\1=debian-vm-dev@'
            -e 's@^(external_kernel)=.*@\1=false@'
            -i run
          )
          sed $sed_args
          tmux new-session -d -s run-vm ./run
          cat run
          sleep 2
          while {! ssh -F ssh/vm.sshconf vm exit} {
            sleep 1
          }

      - name: install docker & qemu-user
        uses: 2moe/local-ssh-action@v0
        with:
          host: vm
          args: |
            -F
            ssh/vm.sshconf
          run: |
            df -Th
            apt-install docker.io
            apt-install -t experimental qemu-user-static

            systemctl disable systemd-networkd-wait-online.service
            apt-get autopurge -y
            apt-get clean
            journalctl --rotate ||:
            journalctl --vacuum-time=1s ||:
            df -Th
            ls -lh /var/cache/apt
            rm -vf /var/lib/apt/lists/*.* ||:
            dd if=/dev/zero of=/root/zero bs=1M || {
              rm -vf /root/zero
            }

      - name: pack vm
        run: |
          ${{env.VM_SHUTDOWN}}
          apt-install b3sum
          while {lsof disk.img} {
            sleep 1
          }
          qemu-img convert -O qcow2 disk.img disk.qcow2
          unlink disk.img
          sed_args=(
            -E
            -e 's@^(\s{2,})disk\.img$@\1disk.qcow2@'
            -i run
          )
          sed $sed_args

          files=(
            disk.qcow2
            run
            Readme.*
            connect-to-ssh
            get-file-from-vm
            send-file-to-vm
          )
          for f ($files ssh/*) {
            b3sum $f >> blake3.txt
          }
          for f (ssh blake3.txt) {
            files+=$f
          }

          args=(
            --posix
            --use-compress-program='zstdmt --long -18v'
            -cf vm-dev_${{env.ARCH}}.tar.zst
            $files
          )
          tar $args

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          tag_name: unstable
          files: |
            *.tar.zst
